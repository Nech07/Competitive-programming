#include <bits/stdc++.h>
#pragma GCC optimize ("03")
#pragma GCC target ("sse4")
#include <math.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> cd;

typedef pair<int,int> pi;
typedef pair<ll,ll> pl;
typedef pair<ld,ld> pd;

typedef vector<int> vi;
typedef vector<ld> vd;
typedef vector<ll> vl;
typedef vector<pi> vpi;
typedef vector<cd> vcd;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define F0R(i,a) for(int i=0;i<a;i++)
#define FORd(i,a,b) for(int i=b-1;i>=a;i--)
#define F0Rd(i,a) for(int i=a-1;i>=0;i--)
#define trav(a,x) for(auto& a :x)

#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
#define all(x) x.begin(),x.end()
#define ins insert
#define nl "\n"
void solve();
bool turn(int a, int b, int c, int d);
bool between(int a, int b, int c);

int main(){
	cin.tie(0);
	ios::sync_with_stdio(0);
	int t; cin>>t;
	while(t--){
		solve();
	}

}

bool turn(int a,int b, int c, int d){
	return a!=c && b!=d;
}
bool between(int a, int b, int c){
	return (b>a&&c<b) || (b<a && b<c);
}



void solve(){
	int x1,x2,x3,y1,y2,y3;
	cin>>x1>>y1>>x2>>y2>>x3>>y3;
	if(turn (x1,y1,x2,y2)&&turn(x2,y2,x3,y3)){
		cout <<"NO\n";return;
	}
	if((between(x1,x2,x3)) ||(between(y1,y2,y3))){
		cout <<"NO\n";return;
	}
	cout << "YES\n";
}
