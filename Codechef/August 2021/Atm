#include <bits/stdc++.h>
#pragma GCC optimize ("03")
#pragma GCC target ("sse4")
#include <math.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> cd;

typedef pair<int,int> pi;
typedef pair<ll,ll> pl;
typedef pair<ld,ld> pd;

typedef vector<int> vi;
typedef vector<ld> vd;
typedef vector<ll> vl;
typedef vector<pi> vpi;
typedef vector<cd> vcd;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define F0R(i,a) for(int i=0;i<a;i++)
#define FORd(i,a,b) for(int i=b-1;i>=a;i--)
#define F0Rd(i,a) for(int i=a-1;i>=0;i--)
#define trav(a,x) for(auto& a :x)

#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
#define all(x) x.begin(),x.end()
#define ins insert
#define nl "\n"


//can't use % for floating points with c/c++, since % returns the discarded part from the division, since the floating point retains everything it makes no sence, 
//then we use fmod
int main(){
	cin.tie(0);
	ios::sync_with_stdio(0);
	double x,y;cin>>x>>y;
	if(fmod(x,5)){
		cout<<y;return 0;
	}
	if(y-x-0.5<0){
		cout<<y;return 0;
	}
	printf("%0.2f",y-x-0.5);

}

