#include <iostream>
#include <bits/stdc++.h>
#include <string.h>
#include <string>
#include <set>
#include <ctype.h>
#include <algorithm>
#include <vector>
#include <map>
#include <math.h>
#define ll long long
using namespace std;


//si puó fare pure la ricurisione, qua peró ho usato un po'di permutazioni e matematica:
//all the possible positions of the two kngihts is n*n-1; n-1 since a position is already occupied by the first knight, bust since they arethe same piece then 
//it means that the combinations are repeated one time, that's why it's divided by 2.
//attack positions: the knights can threathen each other only when they are in 2x3 rectangle, 
//then we have n-1 rectangle put horizontally since the rectangle is 2x3 and vertically we have n-2;
//the same is applied for with a 3*2 so we have 2*(n-1)*(n-2), but in a rectangle there are 2 ways 2 knight can attack each other so 4*(n-1)*(n-2).

int main(){
	cin.tie(0);
	ios::sync_with_stdio(0);
	ll n,i; cin >> n;
	for(i=1;i<=n;i++){
		ll totalpositions = i*i*i*(i-1)/2;
		ll attackpositions = 4*(i-1)*(i-2);
		cout<< totalpositions-attackpositions<<endl



			;
	}


}
