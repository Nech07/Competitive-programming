#include <bits/stdc++.h>
#include <numeric>
#pragma GCC optimize("03")
#pragma GCC target("sse4")
#include <math.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> cd;

typedef pair<int, int> pi;
typedef pair<ll, ll> pl;
typedef pair<ld, ld> pd;

typedef vector<int> vi;
typedef vector<ld> vd;
typedef vector<ll> vl;
typedef vector<pi> vpi;
typedef vector<pl> vpl;
typedef vector<cd> vcd;

#define FOR(i, a, b) for (int i = a; i < b; i++)
#define F0R(i, a) for (int i = 0; i < a; i++)
#define FORd(i, a, b) for (int i = b - 1; i >= a; i--)
#define F0Rd(i, a) for (int i = a - 1; i >= 0; i--)
#define trav(a, x) for (auto &a : x)

#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
#define all(x) x.begin(), x.end()
#define ins insert
#define nl "\n"

template<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }
template<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }


void solve(){
	ll n;
	cin>>n;vl v(n);
	for(ll i=0; i<n; i++){
		cin >>v[i];
	}
	ll sum=0,potion=0;
	multiset<ll>a;
	for(ll i=0;i<n;i++){
		if(v[i]<0){
			a.ins(v[i]);
		}
		sum+=v[i];
		potion++;
		while(sum<0){
			sum-=*a.begin();
			a.erase(a.begin());
			potion--;
		}
	}
	cout<<potion;


}



int main(){
	cin.tie(0);
	ios::sync_with_stdio(0);
	ll t=1;
	//cin>>t;
	while(t--){	
	solve();
	}
}
