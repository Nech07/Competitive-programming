#include <bits/stdc++.h>
#pragma GCC optimize("03")
#pragma GCC target("sse4")
using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> cd;
typedef pair<int, int> pi;
typedef pair<ll, ll> pl;
typedef pair<ld, ld> pd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef vector<ll> vl;
typedef vector<pi> vpi;
typedef vector<pl> vpl;
typedef vector<cd> vcd;
#define trav(a, x) for (auto &a : x)
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
#define all(x) x.begin(), x.end()
#define ins insert
#define nl "\n"
#define rep(i,n) for(int i=0; i<n; i++)
bool check(vl a,int n){
	ll b=a[0];
	rep(i,n){
		if(a[i]!=b) return false;
	}
	return true;
}


void solve(){
	int n; cin >>n;
	vl a(n);
	rep(i,n) cin >>a[i];
	if(check(a,n)) cout << 0<<nl;
	else{
		rep(i,n){
			if( a[i]==1|| !a[i]){
				cout << -1<<nl;return;
			}
		}
		vpi ans;
		while(1){
			if(check(a,n)){
				break;
			}
			int i=max_element(all(a))-begin(a);
			int j=min_element(all(a))-begin(a);
			ans.emplace_back(i+1,j+1);
			ll prev= a[i];
			a[i]=ceil(a[i]/a[j]);
			if(prev%a[j]) a[i]++;
		}
		cout << sz(ans)<<nl;
		trav(b,ans) cout << b.f << " " << b.s<<nl;

			







		}


}




int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	int t=1;
	cin>>t;
	while(t--){
		solve();
	}
}
